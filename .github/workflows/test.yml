name: Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-latest, macos-latest, windows-latest]
        rust_version: [1.13.0, stable]
        wasm: ['no_wasm']
        core: ['std']
        kind: ['test']
        include:
        - os: ubuntu-latest
          rust_version: stable
          kind: lint
        # check all tzs occasionally
        - os: ubuntu-latest
          rust_version: stable
          exhaustive_tz: y
        - os: windows-latest
          rust_version: stable
          exhaustive_tz: y
        # test other rust versions
        - os: ubuntu-latest
          rust_version: beta
        - os: ubuntu-latest
          rust_version: nightly
        # test wasmbind
        - os: macos-latest
          wasm: 'yes_wasm'
          rust_version: stable
        # test no_std
        - os: macos-latest
          core: 'no_std'
          rust_version: stable
        - os: ubuntu-latest
          core: 'no_std'
          rust_version: stable

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        if: ${{ matrix.core == 'std' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          override: true

      - name: Install rust with no_std toolchain
        if: ${{ matrix.core == 'no_std' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          target: thumbv6m-none-eabi
          override: true

      - name: Install node
        if: ${{ matrix.wasm == 'yes_wasm' }}
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Build and Test
        run: bash ci/github.sh
        env:
          RUST_VERSION: ${{ matrix.rust_version }}
          CORE: ${{ matrix.core }}
          WASM: ${{ matrix.wasm }}
          EXHAUSTIVE_TZ: ${{ matrix.exhaustive_tz }}
          KIND: ${{ matrix.kind }}
